server.port=8000
#server.servlet.context-path=/esc-producer
spring.application.name=ESC-PRODUCER

eureka.client.service-url.defaultZone=http://127.00.0.1:1000/eureka/
#开启健康检查（需要spring-boot-starter-actuator依赖）
eureka.client.healthcheck.enabled=true
#是否注册到eureka
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

#mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.password=root
spring.datasource.username=root1234
spring.datasource.url=jdbc:mysql://localhost:3306/yangt?characterEncoding=utf8&useSSL=false&serverTimezone=UTC&rewriteBatchedStatements=true

#mybatis
mybatis.mapper-locations=classpath:mapping/*.xml
mybatis.type-aliases-package=com.example.demo.mybatis.pojo
mybatis.configuration.aggressive-lazy-loading=false  
mybatis.configuration.lazy-loading-enabled=true
mybatis.configuration.cache-enabled=true


#jpa config
#spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
#creat table if or not
spring.jpa.hibernate.ddl-auto=update
# show sql if or not
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect


threadpool.corePoolSize=2
threadpool.maxPoolSize=5
threadpool.queueCapacity=10
threadpool.keepAliveSeconds=300



spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.jedis.pool.max-idle=200
spring.redis.jedis.pool.max-wait=
spring.redis.timeout=1000



#redis 集群配置
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#spring.redis.pool.max-idle=8
#spring.redis.timeout=2000
#spring.redis.commandmandTimeout=5000
#spring.redis.sentinel.master=mymaster
#spring.redis.sentinel.nodes=192.168.17.36:26379,192.168.17.36:26380,192.168.17.36:26381


#kafka
spring.kafka.bootstrap-servers=192.168.17.88:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# 指定默认消费者group id
spring.kafka.consumer.group-id=kafka
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
# 指定消息key和消息体的编解码方式

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.zookeeper.host=192.168.17.88:2181
spring.zookeeper.timed=500000


logging.config=classpath:logback.xml
logging.level.com.example.yangt=debug
logging.level.com.example.yangt.mapper=debug




#spring.kafka.bootstrap-servers = 10.122.72.132:9092,10.122.72.138:9092,10.122.72.137:9092
#spring.kafka.consumer.group-id = mos-uiaa-core-idp-prod
#spring.kafka.consumer.auto-offset-reset = earliest
#spring.kafka.consumer.max-poll-records = 1000
#spring.kafka.consumer.enable-auto-commit = false
#spring.kafka.consumer.auto-commit-interval = 1000
#spring.kafka.listener.concurrency = 3
#spring.kafka.loginTopic = IDP-QRCODELOGINSTATUS
spring.kafka.modinfoTopic = IDP-MOD-TOPIC
spring.kafka.endpoint.health.sensitive = false
